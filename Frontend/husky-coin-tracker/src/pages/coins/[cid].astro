---
import Layout from "../../components/layout.astro";
import Coin from "../../components/Coin";

const { cid } = Astro.params;
const user = Astro.locals.pb.authStore.model;

let coin: any = null;

if (cid) {
    const coinList = await Astro.locals.pb
        .collection("Coins")
        .getList(1, 1, { filter: `CoinId = '${cid}'` });

    if (coinList) {
        coin = coinList.items[0];
    }
}

if (!coin) {
    return Astro.redirect("/");
}

let entry: any = null;
const isWatched = user?.watchlist.includes(coin.id);

const portfolioList = await Astro.locals.pb
    .collection("Portfolios")
    .getList(1, 1, {
        filter: `Coin.CoinId = '${coin.CoinId}' && User.id = '${user?.id}'`,
    });

if (portfolioList) {
    entry = portfolioList.items[0];
}

async function handleRequest(user: any, coin: any, type: any, amount: any) {
    if (!user || !coin || !type || !amount) {
        console.log("A parameter is missing!");
        return;
    }

    if (type == "BUY") {
        try {
            await Astro.locals.pb.collection("Transactions").create({
                User: user.id,
                Type: "Buy",
                Amount: parseInt(amount),
                Coin: coin.id,
            });
        } catch (error) {
            console.log(`Buy error: ${error}`);
        }
    } else if (type == "SELL") {
        try {
            await Astro.locals.pb.collection("Transactions").create({
                User: user.id,
                Type: "Sell",
                Amount: parseInt(amount),
                Coin: coin.id,
            });
        } catch (error) {
            console.log(`Sell error: ${error}`);
        }
    } else {
        console.log("Unhandled request type...");
    }
}

if (Astro.request.method === "POST") {
    const data = await Astro.request.formData();
    const actionType = data.get("action");

    if (actionType === "subscribe") {
        if (user) {
            if (isWatched) {
                await Astro.locals.pb.collection("users").update(user.id, {
                    watchlist: user.watchlist.filter(
                        (id: string) => id !== coin.id,
                    ),
                });
            } else {
                await Astro.locals.pb.collection("users").update(user.id, {
                    watchlist: [...user.watchlist, coin.id],
                });
            }
        }
    } else if (actionType == "transaction") {
        await handleRequest(user, coin, data.get("type"), data.get("amount"));
    }
    return Astro.redirect(`/coins/${cid}`);
}

const loggedIn = Astro.locals.pb.authStore.isValid;
---

<html>
    <head>
        <title>Coin Page</title>
    </head>
    <body>
        <Layout>
            <div class="flex">
                <div class="w-3/4 p-6 flex items-center">
                    <Coin client:load coin={coin} />
                </div>
                <div class="w-1/4 p-6 flex flex-col">
                    {
                        loggedIn ? (
                            <>
                                <form
                                    method="POST"
                                    class="subscription-form"
                                    accept-charset="UTF-8"
                                >
                                    <input
                                        type="hidden"
                                        name="action"
                                        value="subscribe"
                                    />
                                    <button
                                        type="submit"
                                        class="bg-transparent border-none p-0"
                                    >
                                        {isWatched ? (
                                            <svg
                                                xmlns="http://www.w3.org/2000/svg"
                                                class="h-10 w-10"
                                                fill="currentColor"
                                                viewBox="0 0 24 24"
                                                stroke="currentColor"
                                                stroke-width="2"
                                            >
                                                <path d="M12 2l2.39 4.924 5.447.791-3.937 3.83.93 5.414-4.84-2.545-4.84 2.545.93-5.414-3.937-3.83 5.447-.791L12 2z" />
                                            </svg>
                                        ) : (
                                            <svg
                                                xmlns="http://www.w3.org/2000/svg"
                                                class="h-10 w-10"
                                                fill="none"
                                                viewBox="0 0 24 24"
                                                stroke="currentColor"
                                                stroke-width="2"
                                            >
                                                <path d="M12 2l2.39 4.924 5.447.791-3.937 3.83.93 5.414-4.84-2.545-4.84 2.545.93-5.414-3.937-3.83 5.447-.791L12 2z" />
                                            </svg>
                                        )}
                                    </button>
                                </form>

                                <form
                                    method="POST"
                                    class="space-y-8"
                                    accept-charset="UTF-8"
                                    enctype="multipart/form-data"
                                >
                                    <input
                                        type="hidden"
                                        name="action"
                                        value="transaction"
                                    />
                                    <p class="">
                                        Amount Owned: {entry ? entry.Amount : 0}
                                    </p>
                                    <div>
                                        <label
                                            for="amount"
                                            class="block text-sm font-medium text-gray-700"
                                        >
                                            Amount:
                                        </label>
                                        <input
                                            name="amount"
                                            type="number"
                                            class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-red-500 focus:border-red-500"
                                            value={0}
                                            required
                                        />
                                    </div>
                                    <div>
                                        <label
                                            for="type"
                                            class="block text-sm font-medium text-gray-700"
                                        >
                                            Transaction Type:
                                        </label>
                                        <select
                                            name="type"
                                            class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-red-500 focus:border-red-500"
                                            required
                                        >
                                            <option value="BUY">Buy</option>
                                            <option value="SELL">Sell</option>
                                        </select>
                                    </div>
                                    <button
                                        type="submit"
                                        class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded"
                                    >
                                        Submit Transaction
                                    </button>
                                </form>
                            </>
                        ) : (
                            ""
                        )
                    }
                </div>
            </div>
        </Layout>
    </body>
</html>
